#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* next;
};
struct Node* head = NULL;
void insertAtBeginning(int newData) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = newData;
    newNode->next = head;
    head = newNode;
}
void deleteNode(int target) {
    if (head == NULL) {
        return;
    }
    if (head->data == target) {
        struct Node* temp = head;
        head = head->next;
        free(temp);
        return;
    }
    struct Node* current = head;
    while (current->next != NULL && current->next->data != target) {
        current = current->next;
    }
    if (current->next != NULL) {
        struct Node* temp = current->next;
        current->next = temp->next;
        free(temp);
    }
}
void display() {
    struct Node* current = head;
    while (current != NULL) {
        printf("%d -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");
}
int main() {
    insertAtBeginning(5);
    insertAtBeginning(10);
    insertAtBeginning(15);
    insertAtBeginning(20);
    printf("Linked list: ");
    display();
    deleteNode(10);
    printf("Linked list after deletion: ");
    display();
    return 0;
}
