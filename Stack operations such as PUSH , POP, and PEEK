#include<stdio.h>
#define MAX_SIZE 100
struct Stack{
	int arr[MAX_SIZE];
	int top;
};
void initialize(struct Stack*s){
	s->top=-1;
}
int isEmpty(struct Stack*s){
	return s->top==-1;
}
int isFull(struct Stack*s){
	return s->top==MAX_SIZE-1;
}
void push(struct Stack*s,int value){
	if(isFull(s)){
		printf("Stack overflow: cannot push element.\n");
		return;
	}
	s->top++;
	s->arr[s->top]=value;
	printf("Pushed %d onto the stack.\n",value);
}
int pop(struct Stack*s){
	if(isEmpty(s)){
		printf("Stack underflow: Cannot pop element.\n");
		return -1;
	}
	int poppedValue=s->arr[s->top];
	s->top--;
	return poppedValue;
}
int peek(struct Stack*s){
	if(isEmpty(s)){
		printf("Stack is empty:Cannot peek element.\n");
		return -1;
	}
	return s->arr[s->top];
}
int main(){
	struct Stack stack;
	initialize(&stack);
	push(&stack,10);
	push(&stack,20);
	push(&stack,30);
	printf("Top element:%d\n",peek(&stack));
    printf("Popped: %d\n",pop(&stack));
    printf("Popped: %d\n",pop(&stack));
    printf("Popped: %d\n",pop(&stack));
    printf("Top element after popping: %d\n",peek(&stack));
    return 0;   	
}
